{
	"id": "b8a05a069c92ce18ad54e3d7c63a7683",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"donation.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ProfileDonation is Ownable {\r\n    mapping(address => bool) public isVerified;\r\n    mapping(address => uint256) public donations;\r\n\r\n    event WalletVerified(address indexed user);\r\n    event DonationReceived(address indexed donor, address indexed recipient, uint256 amount);\r\n    event Withdrawal(address indexed user, uint256 amount);\r\n    \r\n    constructor() Ownable(msg.sender) {}\r\n\r\n    function checkVerification(address user) external view returns (bool) {\r\n        return isVerified[user];\r\n    }\r\n\r\n    function verifyWallet() external {\r\n        require(!isVerified[msg.sender], \"Wallet already verified\");\r\n        isVerified[msg.sender] = true;\r\n        emit WalletVerified(msg.sender);\r\n    }\r\n\r\n    function donate(address recipient) external payable {\r\n        require(isVerified[recipient], \"Recipient must be a verified user\");\r\n        require(msg.value > 0, \"Donation amount must be greater than zero\");\r\n\r\n        donations[recipient] += msg.value;\r\n        emit DonationReceived(msg.sender, recipient, msg.value);\r\n    }\r\n\r\n    function withdraw() external {\r\n        uint256 amount = donations[msg.sender];\r\n        require(amount > 0, \"No funds to withdraw\");\r\n\r\n        donations[msg.sender] = 0;\r\n        payable(msg.sender).transfer(amount);\r\n        emit Withdrawal(msg.sender, amount);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"donation.sol": {
				"ProfileDonation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DonationReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "WalletVerified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "checkVerification",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "donations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verifyWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"donation.sol\":114:1447  contract ProfileDonation is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"donation.sol\":470:506  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"donation.sol\":492:502  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"donation.sol\":114:1447  contract ProfileDonation is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"donation.sol\":114:1447  contract ProfileDonation is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"donation.sol\":114:1447  contract ProfileDonation is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb9209e33\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbaab9797\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcc6cb19a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_11:\n      dup1\n      0x362a95\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5cef5334\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"donation.sol\":835:1163  function donate(address recipient) external payable {... */\n    tag_2:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"donation.sol\":1171:1442  function withdraw() external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"donation.sol\":634:827  function verifyWallet() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":157:199  mapping(address => bool) public isVerified */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":514:626  function checkVerification(address user) external view returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":206:250  mapping(address => uint256) public donations */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"donation.sol\":835:1163  function donate(address recipient) external payable {... */\n    tag_15:\n        /* \"donation.sol\":906:916  isVerified */\n      0x01\n        /* \"donation.sol\":906:927  isVerified[recipient] */\n      0x00\n        /* \"donation.sol\":917:926  recipient */\n      dup3\n        /* \"donation.sol\":906:927  isVerified[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"donation.sol\":898:965  require(isVerified[recipient], \"Recipient must be a verified user\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"donation.sol\":996:997  0 */\n      0x00\n        /* \"donation.sol\":984:993  msg.value */\n      callvalue\n        /* \"donation.sol\":984:997  msg.value > 0 */\n      gt\n        /* \"donation.sol\":976:1043  require(msg.value > 0, \"Donation amount must be greater than zero\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"donation.sol\":1080:1089  msg.value */\n      callvalue\n        /* \"donation.sol\":1056:1065  donations */\n      0x02\n        /* \"donation.sol\":1056:1076  donations[recipient] */\n      0x00\n        /* \"donation.sol\":1066:1075  recipient */\n      dup4\n        /* \"donation.sol\":1056:1076  donations[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"donation.sol\":1056:1089  donations[recipient] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":1134:1143  recipient */\n      dup1\n        /* \"donation.sol\":1105:1155  DonationReceived(msg.sender, recipient, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":1122:1132  msg.sender */\n      caller\n        /* \"donation.sol\":1105:1155  DonationReceived(msg.sender, recipient, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x509fb5d764cf5e98b9f02a3d86350f8085cedb516140098d2d6fc2eb6256ac24\n        /* \"donation.sol\":1145:1154  msg.value */\n      callvalue\n        /* \"donation.sol\":1105:1155  DonationReceived(msg.sender, recipient, msg.value) */\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"donation.sol\":835:1163  function donate(address recipient) external payable {... */\n      pop\n      jump\t// out\n        /* \"donation.sol\":1171:1442  function withdraw() external {... */\n    tag_18:\n        /* \"donation.sol\":1211:1225  uint256 amount */\n      0x00\n        /* \"donation.sol\":1228:1237  donations */\n      0x02\n        /* \"donation.sol\":1228:1249  donations[msg.sender] */\n      0x00\n        /* \"donation.sol\":1238:1248  msg.sender */\n      caller\n        /* \"donation.sol\":1228:1249  donations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"donation.sol\":1211:1249  uint256 amount = donations[msg.sender] */\n      swap1\n      pop\n        /* \"donation.sol\":1277:1278  0 */\n      0x00\n        /* \"donation.sol\":1268:1274  amount */\n      dup2\n        /* \"donation.sol\":1268:1278  amount > 0 */\n      gt\n        /* \"donation.sol\":1260:1303  require(amount > 0, \"No funds to withdraw\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"donation.sol\":1340:1341  0 */\n      0x00\n        /* \"donation.sol\":1316:1325  donations */\n      0x02\n        /* \"donation.sol\":1316:1337  donations[msg.sender] */\n      0x00\n        /* \"donation.sol\":1326:1336  msg.sender */\n      caller\n        /* \"donation.sol\":1316:1337  donations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"donation.sol\":1316:1341  donations[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":1360:1370  msg.sender */\n      caller\n        /* \"donation.sol\":1352:1380  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":1352:1388  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"donation.sol\":1381:1387  amount */\n      dup3\n        /* \"donation.sol\":1352:1388  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n        /* \"donation.sol\":1415:1425  msg.sender */\n      caller\n        /* \"donation.sol\":1404:1434  Withdrawal(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"donation.sol\":1427:1433  amount */\n      dup3\n        /* \"donation.sol\":1404:1434  Withdrawal(msg.sender, amount) */\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"donation.sol\":1200:1442  {... */\n      pop\n        /* \"donation.sol\":1171:1442  function withdraw() external {... */\n      jump\t// out\n        /* \"donation.sol\":634:827  function verifyWallet() external {... */\n    tag_21:\n        /* \"donation.sol\":687:697  isVerified */\n      0x01\n        /* \"donation.sol\":687:709  isVerified[msg.sender] */\n      0x00\n        /* \"donation.sol\":698:708  msg.sender */\n      caller\n        /* \"donation.sol\":687:709  isVerified[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"donation.sol\":686:709  !isVerified[msg.sender] */\n      iszero\n        /* \"donation.sol\":678:737  require(!isVerified[msg.sender], \"Wallet already verified\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"donation.sol\":773:777  true */\n      0x01\n        /* \"donation.sol\":748:758  isVerified */\n      dup1\n        /* \"donation.sol\":748:770  isVerified[msg.sender] */\n      0x00\n        /* \"donation.sol\":759:769  msg.sender */\n      caller\n        /* \"donation.sol\":748:770  isVerified[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"donation.sol\":748:777  isVerified[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":808:818  msg.sender */\n      caller\n        /* \"donation.sol\":793:819  WalletVerified(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb44ff3eebb7f4ccc77e0b5b51902509405960cb2e09b1d24846e951adb958b7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"donation.sol\":634:827  function verifyWallet() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"donation.sol\":157:199  mapping(address => bool) public isVerified */\n    tag_33:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"donation.sol\":514:626  function checkVerification(address user) external view returns (bool) {... */\n    tag_39:\n        /* \"donation.sol\":578:582  bool */\n      0x00\n        /* \"donation.sol\":602:612  isVerified */\n      0x01\n        /* \"donation.sol\":602:618  isVerified[user] */\n      0x00\n        /* \"donation.sol\":613:617  user */\n      dup4\n        /* \"donation.sol\":602:618  isVerified[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"donation.sol\":595:618  return isVerified[user] */\n      swap1\n      pop\n        /* \"donation.sol\":514:626  function checkVerification(address user) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"donation.sol\":206:250  mapping(address => uint256) public donations */\n    tag_44:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_27\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_96:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_98:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_99:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_123\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_98\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_100:\n        /* \"#utility.yul\":641:665   */\n      tag_125\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_99\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_126:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_101:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_128\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_100\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_131\n      tag_96\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":917:1036   */\n    tag_130:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_132\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_101\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_102:\n        /* \"#utility.yul\":1263:1287   */\n      tag_134\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_99\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_29:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_136\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_102\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1618   */\n    tag_103:\n        /* \"#utility.yul\":1562:1569   */\n      0x00\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1598:1611   */\n      iszero\n        /* \"#utility.yul\":1591:1612   */\n      iszero\n        /* \"#utility.yul\":1580:1612   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1733   */\n    tag_104:\n        /* \"#utility.yul\":1705:1726   */\n      tag_139\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1705:1726   */\n      tag_103\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1700:1703   */\n      dup3\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"#utility.yul\":1624:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1949   */\n    tag_35:\n        /* \"#utility.yul\":1826:1830   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1853:1862   */\n      dup3\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"#utility.yul\":1841:1867   */\n      swap1\n      pop\n        /* \"#utility.yul\":1877:1942   */\n      tag_141\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1877:1942   */\n      tag_104\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1739:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2032   */\n    tag_105:\n        /* \"#utility.yul\":1992:1999   */\n      0x00\n        /* \"#utility.yul\":2021:2026   */\n      dup2\n        /* \"#utility.yul\":2010:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_106:\n        /* \"#utility.yul\":2125:2149   */\n      tag_144\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_105\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_46:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_146\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_106\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2559   */\n    tag_107:\n        /* \"#utility.yul\":2474:2485   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup3\n        /* \"#utility.yul\":2503:2506   */\n      dup3\n        /* \"#utility.yul\":2496:2515   */\n      mstore\n        /* \"#utility.yul\":2548:2552   */\n      0x20\n        /* \"#utility.yul\":2543:2546   */\n      dup3\n        /* \"#utility.yul\":2539:2553   */\n      add\n        /* \"#utility.yul\":2524:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2390:2559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2785   */\n    tag_108:\n        /* \"#utility.yul\":2705:2739   */\n      0x526563697069656e74206d757374206265206120766572696669656420757365\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2689:2703   */\n      add\n        /* \"#utility.yul\":2682:2740   */\n      mstore\n        /* \"#utility.yul\":2774:2777   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2769:2771   */\n      0x20\n        /* \"#utility.yul\":2761:2767   */\n      dup3\n        /* \"#utility.yul\":2757:2772   */\n      add\n        /* \"#utility.yul\":2750:2778   */\n      mstore\n        /* \"#utility.yul\":2565:2785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3157   */\n    tag_109:\n        /* \"#utility.yul\":2933:2936   */\n      0x00\n        /* \"#utility.yul\":2954:3021   */\n      tag_150\n        /* \"#utility.yul\":3018:3020   */\n      0x21\n        /* \"#utility.yul\":3013:3016   */\n      dup4\n        /* \"#utility.yul\":2954:3021   */\n      tag_107\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2947:3021   */\n      swap2\n      pop\n        /* \"#utility.yul\":3030:3123   */\n      tag_151\n        /* \"#utility.yul\":3119:3122   */\n      dup3\n        /* \"#utility.yul\":3030:3123   */\n      tag_108\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3148:3150   */\n      0x40\n        /* \"#utility.yul\":3143:3146   */\n      dup3\n        /* \"#utility.yul\":3139:3151   */\n      add\n        /* \"#utility.yul\":3132:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3582   */\n    tag_54:\n        /* \"#utility.yul\":3329:3333   */\n      0x00\n        /* \"#utility.yul\":3367:3369   */\n      0x20\n        /* \"#utility.yul\":3356:3365   */\n      dup3\n        /* \"#utility.yul\":3352:3370   */\n      add\n        /* \"#utility.yul\":3344:3370   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3425   */\n      dup2\n        /* \"#utility.yul\":3410:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3426   */\n      sub\n        /* \"#utility.yul\":3402:3403   */\n      0x00\n        /* \"#utility.yul\":3391:3400   */\n      dup4\n        /* \"#utility.yul\":3387:3404   */\n      add\n        /* \"#utility.yul\":3380:3427   */\n      mstore\n        /* \"#utility.yul\":3444:3575   */\n      tag_153\n        /* \"#utility.yul\":3570:3574   */\n      dup2\n        /* \"#utility.yul\":3444:3575   */\n      tag_109\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3436:3575   */\n      swap1\n      pop\n        /* \"#utility.yul\":3163:3582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3816   */\n    tag_110:\n        /* \"#utility.yul\":3728:3762   */\n      0x446f6e6174696f6e20616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":3724:3725   */\n      0x00\n        /* \"#utility.yul\":3716:3722   */\n      dup3\n        /* \"#utility.yul\":3712:3726   */\n      add\n        /* \"#utility.yul\":3705:3763   */\n      mstore\n        /* \"#utility.yul\":3797:3808   */\n      0x7468616e207a65726f0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3792:3794   */\n      0x20\n        /* \"#utility.yul\":3784:3790   */\n      dup3\n        /* \"#utility.yul\":3780:3795   */\n      add\n        /* \"#utility.yul\":3773:3809   */\n      mstore\n        /* \"#utility.yul\":3588:3816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3822:4188   */\n    tag_111:\n        /* \"#utility.yul\":3964:3967   */\n      0x00\n        /* \"#utility.yul\":3985:4052   */\n      tag_156\n        /* \"#utility.yul\":4049:4051   */\n      0x29\n        /* \"#utility.yul\":4044:4047   */\n      dup4\n        /* \"#utility.yul\":3985:4052   */\n      tag_107\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3978:4052   */\n      swap2\n      pop\n        /* \"#utility.yul\":4061:4154   */\n      tag_157\n        /* \"#utility.yul\":4150:4153   */\n      dup3\n        /* \"#utility.yul\":4061:4154   */\n      tag_110\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4179:4181   */\n      0x40\n        /* \"#utility.yul\":4174:4177   */\n      dup3\n        /* \"#utility.yul\":4170:4182   */\n      add\n        /* \"#utility.yul\":4163:4182   */\n      swap1\n      pop\n        /* \"#utility.yul\":3822:4188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4194:4613   */\n    tag_57:\n        /* \"#utility.yul\":4360:4364   */\n      0x00\n        /* \"#utility.yul\":4398:4400   */\n      0x20\n        /* \"#utility.yul\":4387:4396   */\n      dup3\n        /* \"#utility.yul\":4383:4401   */\n      add\n        /* \"#utility.yul\":4375:4401   */\n      swap1\n      pop\n        /* \"#utility.yul\":4447:4456   */\n      dup2\n        /* \"#utility.yul\":4441:4445   */\n      dup2\n        /* \"#utility.yul\":4437:4457   */\n      sub\n        /* \"#utility.yul\":4433:4434   */\n      0x00\n        /* \"#utility.yul\":4422:4431   */\n      dup4\n        /* \"#utility.yul\":4418:4435   */\n      add\n        /* \"#utility.yul\":4411:4458   */\n      mstore\n        /* \"#utility.yul\":4475:4606   */\n      tag_159\n        /* \"#utility.yul\":4601:4605   */\n      dup2\n        /* \"#utility.yul\":4475:4606   */\n      tag_111\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4467:4606   */\n      swap1\n      pop\n        /* \"#utility.yul\":4194:4613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4799   */\n    tag_112:\n        /* \"#utility.yul\":4667:4744   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4664:4665   */\n      0x00\n        /* \"#utility.yul\":4657:4745   */\n      mstore\n        /* \"#utility.yul\":4764:4768   */\n      0x11\n        /* \"#utility.yul\":4761:4762   */\n      0x04\n        /* \"#utility.yul\":4754:4769   */\n      mstore\n        /* \"#utility.yul\":4788:4792   */\n      0x24\n        /* \"#utility.yul\":4785:4786   */\n      0x00\n        /* \"#utility.yul\":4778:4793   */\n      revert\n        /* \"#utility.yul\":4805:4996   */\n    tag_59:\n        /* \"#utility.yul\":4845:4848   */\n      0x00\n        /* \"#utility.yul\":4864:4884   */\n      tag_162\n        /* \"#utility.yul\":4882:4883   */\n      dup3\n        /* \"#utility.yul\":4864:4884   */\n      tag_105\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4859:4884   */\n      swap2\n      pop\n        /* \"#utility.yul\":4898:4918   */\n      tag_163\n        /* \"#utility.yul\":4916:4917   */\n      dup4\n        /* \"#utility.yul\":4898:4918   */\n      tag_105\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4893:4918   */\n      swap3\n      pop\n        /* \"#utility.yul\":4941:4942   */\n      dup3\n        /* \"#utility.yul\":4938:4939   */\n      dup3\n        /* \"#utility.yul\":4934:4943   */\n      add\n        /* \"#utility.yul\":4927:4943   */\n      swap1\n      pop\n        /* \"#utility.yul\":4962:4965   */\n      dup1\n        /* \"#utility.yul\":4959:4960   */\n      dup3\n        /* \"#utility.yul\":4956:4966   */\n      gt\n        /* \"#utility.yul\":4953:4989   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":4969:4987   */\n      tag_165\n      tag_112\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4953:4989   */\n    tag_164:\n        /* \"#utility.yul\":4805:4996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5002:5172   */\n    tag_113:\n        /* \"#utility.yul\":5142:5164   */\n      0x4e6f2066756e647320746f207769746864726177000000000000000000000000\n        /* \"#utility.yul\":5138:5139   */\n      0x00\n        /* \"#utility.yul\":5130:5136   */\n      dup3\n        /* \"#utility.yul\":5126:5140   */\n      add\n        /* \"#utility.yul\":5119:5165   */\n      mstore\n        /* \"#utility.yul\":5002:5172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5178:5544   */\n    tag_114:\n        /* \"#utility.yul\":5320:5323   */\n      0x00\n        /* \"#utility.yul\":5341:5408   */\n      tag_168\n        /* \"#utility.yul\":5405:5407   */\n      0x14\n        /* \"#utility.yul\":5400:5403   */\n      dup4\n        /* \"#utility.yul\":5341:5408   */\n      tag_107\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5334:5408   */\n      swap2\n      pop\n        /* \"#utility.yul\":5417:5510   */\n      tag_169\n        /* \"#utility.yul\":5506:5509   */\n      dup3\n        /* \"#utility.yul\":5417:5510   */\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5535:5537   */\n      0x20\n        /* \"#utility.yul\":5530:5533   */\n      dup3\n        /* \"#utility.yul\":5526:5538   */\n      add\n        /* \"#utility.yul\":5519:5538   */\n      swap1\n      pop\n        /* \"#utility.yul\":5178:5544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5550:5969   */\n    tag_64:\n        /* \"#utility.yul\":5716:5720   */\n      0x00\n        /* \"#utility.yul\":5754:5756   */\n      0x20\n        /* \"#utility.yul\":5743:5752   */\n      dup3\n        /* \"#utility.yul\":5739:5757   */\n      add\n        /* \"#utility.yul\":5731:5757   */\n      swap1\n      pop\n        /* \"#utility.yul\":5803:5812   */\n      dup2\n        /* \"#utility.yul\":5797:5801   */\n      dup2\n        /* \"#utility.yul\":5793:5813   */\n      sub\n        /* \"#utility.yul\":5789:5790   */\n      0x00\n        /* \"#utility.yul\":5778:5787   */\n      dup4\n        /* \"#utility.yul\":5774:5791   */\n      add\n        /* \"#utility.yul\":5767:5814   */\n      mstore\n        /* \"#utility.yul\":5831:5962   */\n      tag_171\n        /* \"#utility.yul\":5957:5961   */\n      dup2\n        /* \"#utility.yul\":5831:5962   */\n      tag_114\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5823:5962   */\n      swap1\n      pop\n        /* \"#utility.yul\":5550:5969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5975:6148   */\n    tag_115:\n        /* \"#utility.yul\":6115:6140   */\n      0x57616c6c657420616c7265616479207665726966696564000000000000000000\n        /* \"#utility.yul\":6111:6112   */\n      0x00\n        /* \"#utility.yul\":6103:6109   */\n      dup3\n        /* \"#utility.yul\":6099:6113   */\n      add\n        /* \"#utility.yul\":6092:6141   */\n      mstore\n        /* \"#utility.yul\":5975:6148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6154:6520   */\n    tag_116:\n        /* \"#utility.yul\":6296:6299   */\n      0x00\n        /* \"#utility.yul\":6317:6384   */\n      tag_174\n        /* \"#utility.yul\":6381:6383   */\n      0x17\n        /* \"#utility.yul\":6376:6379   */\n      dup4\n        /* \"#utility.yul\":6317:6384   */\n      tag_107\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6310:6384   */\n      swap2\n      pop\n        /* \"#utility.yul\":6393:6486   */\n      tag_175\n        /* \"#utility.yul\":6482:6485   */\n      dup3\n        /* \"#utility.yul\":6393:6486   */\n      tag_115\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6511:6513   */\n      0x20\n        /* \"#utility.yul\":6506:6509   */\n      dup3\n        /* \"#utility.yul\":6502:6514   */\n      add\n        /* \"#utility.yul\":6495:6514   */\n      swap1\n      pop\n        /* \"#utility.yul\":6154:6520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6526:6945   */\n    tag_71:\n        /* \"#utility.yul\":6692:6696   */\n      0x00\n        /* \"#utility.yul\":6730:6732   */\n      0x20\n        /* \"#utility.yul\":6719:6728   */\n      dup3\n        /* \"#utility.yul\":6715:6733   */\n      add\n        /* \"#utility.yul\":6707:6733   */\n      swap1\n      pop\n        /* \"#utility.yul\":6779:6788   */\n      dup2\n        /* \"#utility.yul\":6773:6777   */\n      dup2\n        /* \"#utility.yul\":6769:6789   */\n      sub\n        /* \"#utility.yul\":6765:6766   */\n      0x00\n        /* \"#utility.yul\":6754:6763   */\n      dup4\n        /* \"#utility.yul\":6750:6767   */\n      add\n        /* \"#utility.yul\":6743:6790   */\n      mstore\n        /* \"#utility.yul\":6807:6938   */\n      tag_177\n        /* \"#utility.yul\":6933:6937   */\n      dup2\n        /* \"#utility.yul\":6807:6938   */\n      tag_116\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6799:6938   */\n      swap1\n      pop\n        /* \"#utility.yul\":6526:6945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203579f5b90cde80e9422ae9d232029d42e908cdc14f6f4de9011b64bcc893182e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610c27806101bc5f395ff3fe608060405260043610610084575f3560e01c80638da5cb5b116100585780638da5cb5b146100e6578063b9209e3314610110578063baab97971461014c578063cc6cb19a14610188578063f2fde38b146101c457610084565b8062362a95146100885780633ccfd60b146100a45780635cef5334146100ba578063715018a6146100d0575b5f80fd5b6100a2600480360381019061009d91906108de565b6101ec565b005b3480156100af575f80fd5b506100b8610372565b005b3480156100c5575f80fd5b506100ce6104cc565b005b3480156100db575f80fd5b506100e46105ef565b005b3480156100f1575f80fd5b506100fa610602565b6040516101079190610918565b60405180910390f35b34801561011b575f80fd5b50610136600480360381019061013191906108de565b610629565b604051610143919061094b565b60405180910390f35b348015610157575f80fd5b50610172600480360381019061016d91906108de565b610646565b60405161017f919061094b565b60405180910390f35b348015610193575f80fd5b506101ae60048036038101906101a991906108de565b610698565b6040516101bb919061097c565b60405180910390f35b3480156101cf575f80fd5b506101ea60048036038101906101e591906108de565b6106ad565b005b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026c90610a15565b60405180910390fd5b5f34116102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae90610aa3565b60405180910390fd5b3460025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103039190610aee565b925050819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f509fb5d764cf5e98b9f02a3d86350f8085cedb516140098d2d6fc2eb6256ac2434604051610367919061097c565b60405180910390a350565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610b6b565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561047a573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516104c1919061097c565b60405180910390a250565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610bd3565b60405180910390fd5b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167ffb44ff3eebb7f4ccc77e0b5b51902509405960cb2e09b1d24846e951adb958b760405160405180910390a2565b6105f7610731565b6106005f6107b8565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6002602052805f5260405f205f915090505481565b6106b5610731565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161071c9190610918565b60405180910390fd5b61072e816107b8565b50565b610739610879565b73ffffffffffffffffffffffffffffffffffffffff16610757610602565b73ffffffffffffffffffffffffffffffffffffffff16146107b65761077a610879565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107ad9190610918565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ad82610884565b9050919050565b6108bd816108a3565b81146108c7575f80fd5b50565b5f813590506108d8816108b4565b92915050565b5f602082840312156108f3576108f2610880565b5b5f610900848285016108ca565b91505092915050565b610912816108a3565b82525050565b5f60208201905061092b5f830184610909565b92915050565b5f8115159050919050565b61094581610931565b82525050565b5f60208201905061095e5f83018461093c565b92915050565b5f819050919050565b61097681610964565b82525050565b5f60208201905061098f5f83018461096d565b92915050565b5f82825260208201905092915050565b7f526563697069656e74206d7573742062652061207665726966696564207573655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f6109ff602183610995565b9150610a0a826109a5565b604082019050919050565b5f6020820190508181035f830152610a2c816109f3565b9050919050565b7f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f610a8d602983610995565b9150610a9882610a33565b604082019050919050565b5f6020820190508181035f830152610aba81610a81565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610af882610964565b9150610b0383610964565b9250828201905080821115610b1b57610b1a610ac1565b5b92915050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f610b55601483610995565b9150610b6082610b21565b602082019050919050565b5f6020820190508181035f830152610b8281610b49565b9050919050565b7f57616c6c657420616c72656164792076657269666965640000000000000000005f82015250565b5f610bbd601783610995565b9150610bc882610b89565b602082019050919050565b5f6020820190508181035f830152610bea81610bb1565b905091905056fea26469706673582212203579f5b90cde80e9422ae9d232029d42e908cdc14f6f4de9011b64bcc893182e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC27 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xBAAB9797 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xCC6CB19A EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI PUSH2 0x84 JUMP JUMPDEST DUP1 PUSH3 0x362A95 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x5CEF5334 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x372 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x5EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x509FB5D764CF5E98B9F02A3D86350F8085CEDB516140098D2D6FC2EB6256AC24 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFB44FF3EEBB7F4CCC77E0B5B51902509405960CB2E09B1D24846E951ADB958B7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x5F7 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x600 PUSH0 PUSH2 0x7B8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x731 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x725 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x7B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0x879 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x757 PUSH2 0x602 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B6 JUMPI PUSH2 0x77A PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AD DUP3 PUSH2 0x884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8D8 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x900 DUP5 DUP3 DUP6 ADD PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92B PUSH0 DUP4 ADD DUP5 PUSH2 0x909 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 DUP2 PUSH2 0x931 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95E PUSH0 DUP4 ADD DUP5 PUSH2 0x93C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x976 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98F PUSH0 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526563697069656E74206D757374206265206120766572696669656420757365 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9FF PUSH1 0x21 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0A DUP3 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA2C DUP2 PUSH2 0x9F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA8D PUSH1 0x29 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xA98 DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABA DUP2 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAF8 DUP3 PUSH2 0x964 JUMP JUMPDEST SWAP2 POP PUSH2 0xB03 DUP4 PUSH2 0x964 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0xAC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB55 PUSH1 0x14 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xB60 DUP3 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB82 DUP2 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616C6C657420616C7265616479207665726966696564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBBD PUSH1 0x17 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC8 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBEA DUP2 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH26 0xF5B90CDE80E9422AE9D232029D42E908CDC14F6F4DE9011B64BC 0xC8 SWAP4 XOR 0x2E PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "114:1333:2:-:0;;;470:36;;;;;;;;;;492:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;114:1333:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;114:1333:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1841,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2169,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1976,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkVerification_228": {
									"entryPoint": 1606,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@donate_289": {
									"entryPoint": 492,
									"id": 289,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donations_190": {
									"entryPoint": 1688,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isVerified_186": {
									"entryPoint": 1577,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1538,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1519,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1709,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyWallet_253": {
									"entryPoint": 1228,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_329": {
									"entryPoint": 882,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90": {
									"entryPoint": 2469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9": {
									"entryPoint": 2849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6948:3",
										"nodeType": "YulBlock",
										"src": "0:6948:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1241:53:3",
													"nodeType": "YulBlock",
													"src": "1241:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:3"
																		},
																		"nativeSrc": "1263:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:3"
																},
																"nativeSrc": "1251:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:3"
															},
															"nativeSrc": "1251:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:3",
														"nodeType": "YulTypedName",
														"src": "1229:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:3",
														"nodeType": "YulTypedName",
														"src": "1236:3:3",
														"type": ""
													}
												],
												"src": "1176:118:3"
											},
											{
												"body": {
													"nativeSrc": "1398:124:3",
													"nodeType": "YulBlock",
													"src": "1398:124:3",
													"statements": [
														{
															"nativeSrc": "1408:26:3",
															"nodeType": "YulAssignment",
															"src": "1408:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:3"
																},
																"nativeSrc": "1416:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1408:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1488:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1501:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1497:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nativeSrc": "1497:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1444:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:3"
																},
																"nativeSrc": "1444:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1444:71:3"
															},
															"nativeSrc": "1444:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1300:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1370:9:3",
														"nodeType": "YulTypedName",
														"src": "1370:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1382:6:3",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1393:4:3",
														"nodeType": "YulTypedName",
														"src": "1393:4:3",
														"type": ""
													}
												],
												"src": "1300:222:3"
											},
											{
												"body": {
													"nativeSrc": "1570:48:3",
													"nodeType": "YulBlock",
													"src": "1570:48:3",
													"statements": [
														{
															"nativeSrc": "1580:32:3",
															"nodeType": "YulAssignment",
															"src": "1580:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1605:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1598:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:3"
																		},
																		"nativeSrc": "1598:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1598:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1591:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:3"
																},
																"nativeSrc": "1591:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1591:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1580:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1580:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1528:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1552:5:3",
														"nodeType": "YulTypedName",
														"src": "1552:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1562:7:3",
														"nodeType": "YulTypedName",
														"src": "1562:7:3",
														"type": ""
													}
												],
												"src": "1528:90:3"
											},
											{
												"body": {
													"nativeSrc": "1683:50:3",
													"nodeType": "YulBlock",
													"src": "1683:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1700:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1700:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1720:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1705:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1705:14:3"
																		},
																		"nativeSrc": "1705:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1705:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1693:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:3"
																},
																"nativeSrc": "1693:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1693:34:3"
															},
															"nativeSrc": "1693:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1624:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1671:5:3",
														"nodeType": "YulTypedName",
														"src": "1671:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1678:3:3",
														"nodeType": "YulTypedName",
														"src": "1678:3:3",
														"type": ""
													}
												],
												"src": "1624:109:3"
											},
											{
												"body": {
													"nativeSrc": "1831:118:3",
													"nodeType": "YulBlock",
													"src": "1831:118:3",
													"statements": [
														{
															"nativeSrc": "1841:26:3",
															"nodeType": "YulAssignment",
															"src": "1841:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1853:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1849:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:3"
																},
																"nativeSrc": "1849:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1849:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1841:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nativeSrc": "1924:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1877:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1877:37:3"
																},
																"nativeSrc": "1877:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1877:65:3"
															},
															"nativeSrc": "1877:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1877:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1739:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1803:9:3",
														"nodeType": "YulTypedName",
														"src": "1803:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1815:6:3",
														"nodeType": "YulTypedName",
														"src": "1815:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1826:4:3",
														"nodeType": "YulTypedName",
														"src": "1826:4:3",
														"type": ""
													}
												],
												"src": "1739:210:3"
											},
											{
												"body": {
													"nativeSrc": "2000:32:3",
													"nodeType": "YulBlock",
													"src": "2000:32:3",
													"statements": [
														{
															"nativeSrc": "2010:16:3",
															"nodeType": "YulAssignment",
															"src": "2010:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "2021:5:3",
																"nodeType": "YulIdentifier",
																"src": "2021:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2010:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2010:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1955:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1982:5:3",
														"nodeType": "YulTypedName",
														"src": "1982:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1992:7:3",
														"nodeType": "YulTypedName",
														"src": "1992:7:3",
														"type": ""
													}
												],
												"src": "1955:77:3"
											},
											{
												"body": {
													"nativeSrc": "2103:53:3",
													"nodeType": "YulBlock",
													"src": "2103:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2143:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2125:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:3"
																		},
																		"nativeSrc": "2125:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:3"
																},
																"nativeSrc": "2113:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2113:37:3"
															},
															"nativeSrc": "2113:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2038:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:3",
														"nodeType": "YulTypedName",
														"src": "2091:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2098:3:3",
														"nodeType": "YulTypedName",
														"src": "2098:3:3",
														"type": ""
													}
												],
												"src": "2038:118:3"
											},
											{
												"body": {
													"nativeSrc": "2260:124:3",
													"nodeType": "YulBlock",
													"src": "2260:124:3",
													"statements": [
														{
															"nativeSrc": "2270:26:3",
															"nodeType": "YulAssignment",
															"src": "2270:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:3"
																},
																"nativeSrc": "2278:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2278:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2350:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2374:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2359:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:3"
																		},
																		"nativeSrc": "2359:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2306:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:3"
																},
																"nativeSrc": "2306:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2306:71:3"
															},
															"nativeSrc": "2306:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2162:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:3",
														"nodeType": "YulTypedName",
														"src": "2232:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2244:6:3",
														"nodeType": "YulTypedName",
														"src": "2244:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2255:4:3",
														"nodeType": "YulTypedName",
														"src": "2255:4:3",
														"type": ""
													}
												],
												"src": "2162:222:3"
											},
											{
												"body": {
													"nativeSrc": "2486:73:3",
													"nodeType": "YulBlock",
													"src": "2486:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2503:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2503:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2508:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2508:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2496:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:3"
																},
																"nativeSrc": "2496:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2496:19:3"
															},
															"nativeSrc": "2496:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2496:19:3"
														},
														{
															"nativeSrc": "2524:29:3",
															"nodeType": "YulAssignment",
															"src": "2524:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2543:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2543:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2539:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2539:3:3"
																},
																"nativeSrc": "2539:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2539:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2524:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2524:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2390:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2458:3:3",
														"nodeType": "YulTypedName",
														"src": "2458:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2463:6:3",
														"nodeType": "YulTypedName",
														"src": "2463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2474:11:3",
														"nodeType": "YulTypedName",
														"src": "2474:11:3",
														"type": ""
													}
												],
												"src": "2390:169:3"
											},
											{
												"body": {
													"nativeSrc": "2671:114:3",
													"nodeType": "YulBlock",
													"src": "2671:114:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2693:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2701:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2701:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2689:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:3"
																		},
																		"nativeSrc": "2689:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2689:14:3"
																	},
																	{
																		"hexValue": "526563697069656e74206d757374206265206120766572696669656420757365",
																		"kind": "string",
																		"nativeSrc": "2705:34:3",
																		"nodeType": "YulLiteral",
																		"src": "2705:34:3",
																		"type": "",
																		"value": "Recipient must be a verified use"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2682:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:3"
																},
																"nativeSrc": "2682:58:3",
																"nodeType": "YulFunctionCall",
																"src": "2682:58:3"
															},
															"nativeSrc": "2682:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "2682:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2761:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2761:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2769:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2769:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2757:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2757:3:3"
																		},
																		"nativeSrc": "2757:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2757:15:3"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "2774:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2774:3:3",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2750:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:3"
																},
																"nativeSrc": "2750:28:3",
																"nodeType": "YulFunctionCall",
																"src": "2750:28:3"
															},
															"nativeSrc": "2750:28:3",
															"nodeType": "YulExpressionStatement",
															"src": "2750:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90",
												"nativeSrc": "2565:220:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2663:6:3",
														"nodeType": "YulTypedName",
														"src": "2663:6:3",
														"type": ""
													}
												],
												"src": "2565:220:3"
											},
											{
												"body": {
													"nativeSrc": "2937:220:3",
													"nodeType": "YulBlock",
													"src": "2937:220:3",
													"statements": [
														{
															"nativeSrc": "2947:74:3",
															"nodeType": "YulAssignment",
															"src": "2947:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3013:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3013:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3018:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3018:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2954:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2954:58:3"
																},
																"nativeSrc": "2954:67:3",
																"nodeType": "YulFunctionCall",
																"src": "2954:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2947:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2947:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3119:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3119:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90",
																	"nativeSrc": "3030:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3030:88:3"
																},
																"nativeSrc": "3030:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3030:93:3"
															},
															"nativeSrc": "3030:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3030:93:3"
														},
														{
															"nativeSrc": "3132:19:3",
															"nodeType": "YulAssignment",
															"src": "3132:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3143:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3143:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3148:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3139:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:3"
																},
																"nativeSrc": "3139:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3139:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3132:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3132:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2791:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2925:3:3",
														"nodeType": "YulTypedName",
														"src": "2925:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2933:3:3",
														"nodeType": "YulTypedName",
														"src": "2933:3:3",
														"type": ""
													}
												],
												"src": "2791:366:3"
											},
											{
												"body": {
													"nativeSrc": "3334:248:3",
													"nodeType": "YulBlock",
													"src": "3334:248:3",
													"statements": [
														{
															"nativeSrc": "3344:26:3",
															"nodeType": "YulAssignment",
															"src": "3344:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3356:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3356:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3367:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3367:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3352:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:3"
																},
																"nativeSrc": "3352:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3352:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3344:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3344:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3391:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3391:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3402:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3402:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3387:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3387:3:3"
																		},
																		"nativeSrc": "3387:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3387:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3410:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3410:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3416:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3416:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3406:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:3"
																		},
																		"nativeSrc": "3406:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3380:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:3"
																},
																"nativeSrc": "3380:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3380:47:3"
															},
															"nativeSrc": "3380:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3380:47:3"
														},
														{
															"nativeSrc": "3436:139:3",
															"nodeType": "YulAssignment",
															"src": "3436:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3570:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3570:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3444:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3444:124:3"
																},
																"nativeSrc": "3444:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3444:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3436:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3436:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3163:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3314:9:3",
														"nodeType": "YulTypedName",
														"src": "3314:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3329:4:3",
														"nodeType": "YulTypedName",
														"src": "3329:4:3",
														"type": ""
													}
												],
												"src": "3163:419:3"
											},
											{
												"body": {
													"nativeSrc": "3694:122:3",
													"nodeType": "YulBlock",
													"src": "3694:122:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3716:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3716:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3724:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3724:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3712:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:3"
																		},
																		"nativeSrc": "3712:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3712:14:3"
																	},
																	{
																		"hexValue": "446f6e6174696f6e20616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "3728:34:3",
																		"nodeType": "YulLiteral",
																		"src": "3728:34:3",
																		"type": "",
																		"value": "Donation amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3705:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:3"
																},
																"nativeSrc": "3705:58:3",
																"nodeType": "YulFunctionCall",
																"src": "3705:58:3"
															},
															"nativeSrc": "3705:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "3705:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3784:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3784:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3792:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3792:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3780:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3780:3:3"
																		},
																		"nativeSrc": "3780:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3780:15:3"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "3797:11:3",
																		"nodeType": "YulLiteral",
																		"src": "3797:11:3",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3773:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:3"
																},
																"nativeSrc": "3773:36:3",
																"nodeType": "YulFunctionCall",
																"src": "3773:36:3"
															},
															"nativeSrc": "3773:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "3773:36:3"
														}
													]
												},
												"name": "store_literal_in_memory_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b",
												"nativeSrc": "3588:228:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3686:6:3",
														"nodeType": "YulTypedName",
														"src": "3686:6:3",
														"type": ""
													}
												],
												"src": "3588:228:3"
											},
											{
												"body": {
													"nativeSrc": "3968:220:3",
													"nodeType": "YulBlock",
													"src": "3968:220:3",
													"statements": [
														{
															"nativeSrc": "3978:74:3",
															"nodeType": "YulAssignment",
															"src": "3978:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4044:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4044:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4049:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4049:2:3",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3985:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3985:58:3"
																},
																"nativeSrc": "3985:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3985:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3978:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3978:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4150:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4150:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b",
																	"nativeSrc": "4061:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4061:88:3"
																},
																"nativeSrc": "4061:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4061:93:3"
															},
															"nativeSrc": "4061:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4061:93:3"
														},
														{
															"nativeSrc": "4163:19:3",
															"nodeType": "YulAssignment",
															"src": "4163:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4174:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4174:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4179:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4179:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4170:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4170:3:3"
																},
																"nativeSrc": "4170:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4170:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4163:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4163:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3822:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3956:3:3",
														"nodeType": "YulTypedName",
														"src": "3956:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3964:3:3",
														"nodeType": "YulTypedName",
														"src": "3964:3:3",
														"type": ""
													}
												],
												"src": "3822:366:3"
											},
											{
												"body": {
													"nativeSrc": "4365:248:3",
													"nodeType": "YulBlock",
													"src": "4365:248:3",
													"statements": [
														{
															"nativeSrc": "4375:26:3",
															"nodeType": "YulAssignment",
															"src": "4375:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4387:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4387:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4398:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4383:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4383:3:3"
																},
																"nativeSrc": "4383:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4383:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4375:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4375:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4422:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4422:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4433:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4433:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4418:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4418:3:3"
																		},
																		"nativeSrc": "4418:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4418:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4441:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4441:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4447:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4447:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4437:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:3"
																		},
																		"nativeSrc": "4437:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4437:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4411:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4411:6:3"
																},
																"nativeSrc": "4411:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4411:47:3"
															},
															"nativeSrc": "4411:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4411:47:3"
														},
														{
															"nativeSrc": "4467:139:3",
															"nodeType": "YulAssignment",
															"src": "4467:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4601:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4601:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4475:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4475:124:3"
																},
																"nativeSrc": "4475:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4475:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4467:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4194:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4345:9:3",
														"nodeType": "YulTypedName",
														"src": "4345:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4360:4:3",
														"nodeType": "YulTypedName",
														"src": "4360:4:3",
														"type": ""
													}
												],
												"src": "4194:419:3"
											},
											{
												"body": {
													"nativeSrc": "4647:152:3",
													"nodeType": "YulBlock",
													"src": "4647:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4664:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4664:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4667:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4667:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4657:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4657:6:3"
																},
																"nativeSrc": "4657:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4657:88:3"
															},
															"nativeSrc": "4657:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4657:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4761:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4764:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4764:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:3"
																},
																"nativeSrc": "4754:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4754:15:3"
															},
															"nativeSrc": "4754:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4754:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4785:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4788:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4788:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4778:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4778:6:3"
																},
																"nativeSrc": "4778:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4778:15:3"
															},
															"nativeSrc": "4778:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4778:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4619:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4619:180:3"
											},
											{
												"body": {
													"nativeSrc": "4849:147:3",
													"nodeType": "YulBlock",
													"src": "4849:147:3",
													"statements": [
														{
															"nativeSrc": "4859:25:3",
															"nodeType": "YulAssignment",
															"src": "4859:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4882:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4864:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4864:17:3"
																},
																"nativeSrc": "4864:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4864:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4859:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4859:1:3"
																}
															]
														},
														{
															"nativeSrc": "4893:25:3",
															"nodeType": "YulAssignment",
															"src": "4893:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4916:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4916:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4898:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4898:17:3"
																},
																"nativeSrc": "4898:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4898:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4893:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4893:1:3"
																}
															]
														},
														{
															"nativeSrc": "4927:16:3",
															"nodeType": "YulAssignment",
															"src": "4927:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4938:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4938:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4941:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4941:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4934:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:3"
																},
																"nativeSrc": "4934:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4934:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4927:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4927:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4967:22:3",
																"nodeType": "YulBlock",
																"src": "4967:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4969:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4969:16:3"
																			},
																			"nativeSrc": "4969:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:18:3"
																		},
																		"nativeSrc": "4969:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4959:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4959:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4962:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4962:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4956:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4956:2:3"
																},
																"nativeSrc": "4956:10:3",
																"nodeType": "YulFunctionCall",
																"src": "4956:10:3"
															},
															"nativeSrc": "4953:36:3",
															"nodeType": "YulIf",
															"src": "4953:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4805:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4836:1:3",
														"nodeType": "YulTypedName",
														"src": "4836:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4839:1:3",
														"nodeType": "YulTypedName",
														"src": "4839:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4845:3:3",
														"nodeType": "YulTypedName",
														"src": "4845:3:3",
														"type": ""
													}
												],
												"src": "4805:191:3"
											},
											{
												"body": {
													"nativeSrc": "5108:64:3",
													"nodeType": "YulBlock",
													"src": "5108:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5130:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5138:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5138:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5126:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5126:3:3"
																		},
																		"nativeSrc": "5126:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5126:14:3"
																	},
																	{
																		"hexValue": "4e6f2066756e647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "5142:22:3",
																		"nodeType": "YulLiteral",
																		"src": "5142:22:3",
																		"type": "",
																		"value": "No funds to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5119:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:3"
																},
																"nativeSrc": "5119:46:3",
																"nodeType": "YulFunctionCall",
																"src": "5119:46:3"
															},
															"nativeSrc": "5119:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "5119:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
												"nativeSrc": "5002:170:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5100:6:3",
														"nodeType": "YulTypedName",
														"src": "5100:6:3",
														"type": ""
													}
												],
												"src": "5002:170:3"
											},
											{
												"body": {
													"nativeSrc": "5324:220:3",
													"nodeType": "YulBlock",
													"src": "5324:220:3",
													"statements": [
														{
															"nativeSrc": "5334:74:3",
															"nodeType": "YulAssignment",
															"src": "5334:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5400:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5400:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5405:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5405:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5341:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5341:58:3"
																},
																"nativeSrc": "5341:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5341:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5334:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5334:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5506:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5506:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																	"nativeSrc": "5417:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5417:88:3"
																},
																"nativeSrc": "5417:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5417:93:3"
															},
															"nativeSrc": "5417:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5417:93:3"
														},
														{
															"nativeSrc": "5519:19:3",
															"nodeType": "YulAssignment",
															"src": "5519:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5530:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5535:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5535:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5526:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:3"
																},
																"nativeSrc": "5526:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5526:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5519:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5178:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5312:3:3",
														"nodeType": "YulTypedName",
														"src": "5312:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5320:3:3",
														"nodeType": "YulTypedName",
														"src": "5320:3:3",
														"type": ""
													}
												],
												"src": "5178:366:3"
											},
											{
												"body": {
													"nativeSrc": "5721:248:3",
													"nodeType": "YulBlock",
													"src": "5721:248:3",
													"statements": [
														{
															"nativeSrc": "5731:26:3",
															"nodeType": "YulAssignment",
															"src": "5731:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5743:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5743:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5754:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5754:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5739:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5739:3:3"
																},
																"nativeSrc": "5739:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5739:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5731:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5731:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5778:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5778:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5789:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5789:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5774:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:3"
																		},
																		"nativeSrc": "5774:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5797:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5797:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5803:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5793:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5793:3:3"
																		},
																		"nativeSrc": "5793:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5793:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5767:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:3"
																},
																"nativeSrc": "5767:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5767:47:3"
															},
															"nativeSrc": "5767:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5767:47:3"
														},
														{
															"nativeSrc": "5823:139:3",
															"nodeType": "YulAssignment",
															"src": "5823:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5957:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5957:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5831:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5831:124:3"
																},
																"nativeSrc": "5831:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5831:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5823:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5823:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5550:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5701:9:3",
														"nodeType": "YulTypedName",
														"src": "5701:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5716:4:3",
														"nodeType": "YulTypedName",
														"src": "5716:4:3",
														"type": ""
													}
												],
												"src": "5550:419:3"
											},
											{
												"body": {
													"nativeSrc": "6081:67:3",
													"nodeType": "YulBlock",
													"src": "6081:67:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6103:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6103:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6111:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6111:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6099:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6099:3:3"
																		},
																		"nativeSrc": "6099:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6099:14:3"
																	},
																	{
																		"hexValue": "57616c6c657420616c7265616479207665726966696564",
																		"kind": "string",
																		"nativeSrc": "6115:25:3",
																		"nodeType": "YulLiteral",
																		"src": "6115:25:3",
																		"type": "",
																		"value": "Wallet already verified"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6092:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6092:6:3"
																},
																"nativeSrc": "6092:49:3",
																"nodeType": "YulFunctionCall",
																"src": "6092:49:3"
															},
															"nativeSrc": "6092:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "6092:49:3"
														}
													]
												},
												"name": "store_literal_in_memory_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf",
												"nativeSrc": "5975:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6073:6:3",
														"nodeType": "YulTypedName",
														"src": "6073:6:3",
														"type": ""
													}
												],
												"src": "5975:173:3"
											},
											{
												"body": {
													"nativeSrc": "6300:220:3",
													"nodeType": "YulBlock",
													"src": "6300:220:3",
													"statements": [
														{
															"nativeSrc": "6310:74:3",
															"nodeType": "YulAssignment",
															"src": "6310:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6376:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6376:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6381:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6381:2:3",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6317:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6317:58:3"
																},
																"nativeSrc": "6317:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6317:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6310:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6482:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6482:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf",
																	"nativeSrc": "6393:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6393:88:3"
																},
																"nativeSrc": "6393:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6393:93:3"
															},
															"nativeSrc": "6393:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6393:93:3"
														},
														{
															"nativeSrc": "6495:19:3",
															"nodeType": "YulAssignment",
															"src": "6495:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6506:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6506:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6511:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6511:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6502:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6502:3:3"
																},
																"nativeSrc": "6502:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6502:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6495:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6154:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6288:3:3",
														"nodeType": "YulTypedName",
														"src": "6288:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6296:3:3",
														"nodeType": "YulTypedName",
														"src": "6296:3:3",
														"type": ""
													}
												],
												"src": "6154:366:3"
											},
											{
												"body": {
													"nativeSrc": "6697:248:3",
													"nodeType": "YulBlock",
													"src": "6697:248:3",
													"statements": [
														{
															"nativeSrc": "6707:26:3",
															"nodeType": "YulAssignment",
															"src": "6707:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6719:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6719:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6730:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6730:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6715:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6715:3:3"
																},
																"nativeSrc": "6715:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6715:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6707:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6707:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:3"
																		},
																		"nativeSrc": "6750:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6773:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6773:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6779:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6779:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6769:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6769:3:3"
																		},
																		"nativeSrc": "6769:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6769:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6743:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:3"
																},
																"nativeSrc": "6743:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6743:47:3"
															},
															"nativeSrc": "6743:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6743:47:3"
														},
														{
															"nativeSrc": "6799:139:3",
															"nodeType": "YulAssignment",
															"src": "6799:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6933:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6933:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6807:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6807:124:3"
																},
																"nativeSrc": "6807:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6807:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6799:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6799:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6526:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6677:9:3",
														"nodeType": "YulTypedName",
														"src": "6677:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6692:4:3",
														"nodeType": "YulTypedName",
														"src": "6692:4:3",
														"type": ""
													}
												],
												"src": "6526:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient must be a verified use\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Donation amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"No funds to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wallet already verified\")\n\n    }\n\n    function abi_encode_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610084575f3560e01c80638da5cb5b116100585780638da5cb5b146100e6578063b9209e3314610110578063baab97971461014c578063cc6cb19a14610188578063f2fde38b146101c457610084565b8062362a95146100885780633ccfd60b146100a45780635cef5334146100ba578063715018a6146100d0575b5f80fd5b6100a2600480360381019061009d91906108de565b6101ec565b005b3480156100af575f80fd5b506100b8610372565b005b3480156100c5575f80fd5b506100ce6104cc565b005b3480156100db575f80fd5b506100e46105ef565b005b3480156100f1575f80fd5b506100fa610602565b6040516101079190610918565b60405180910390f35b34801561011b575f80fd5b50610136600480360381019061013191906108de565b610629565b604051610143919061094b565b60405180910390f35b348015610157575f80fd5b50610172600480360381019061016d91906108de565b610646565b60405161017f919061094b565b60405180910390f35b348015610193575f80fd5b506101ae60048036038101906101a991906108de565b610698565b6040516101bb919061097c565b60405180910390f35b3480156101cf575f80fd5b506101ea60048036038101906101e591906108de565b6106ad565b005b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026c90610a15565b60405180910390fd5b5f34116102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae90610aa3565b60405180910390fd5b3460025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103039190610aee565b925050819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f509fb5d764cf5e98b9f02a3d86350f8085cedb516140098d2d6fc2eb6256ac2434604051610367919061097c565b60405180910390a350565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610b6b565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561047a573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516104c1919061097c565b60405180910390a250565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610bd3565b60405180910390fd5b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167ffb44ff3eebb7f4ccc77e0b5b51902509405960cb2e09b1d24846e951adb958b760405160405180910390a2565b6105f7610731565b6106005f6107b8565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6002602052805f5260405f205f915090505481565b6106b5610731565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161071c9190610918565b60405180910390fd5b61072e816107b8565b50565b610739610879565b73ffffffffffffffffffffffffffffffffffffffff16610757610602565b73ffffffffffffffffffffffffffffffffffffffff16146107b65761077a610879565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107ad9190610918565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ad82610884565b9050919050565b6108bd816108a3565b81146108c7575f80fd5b50565b5f813590506108d8816108b4565b92915050565b5f602082840312156108f3576108f2610880565b5b5f610900848285016108ca565b91505092915050565b610912816108a3565b82525050565b5f60208201905061092b5f830184610909565b92915050565b5f8115159050919050565b61094581610931565b82525050565b5f60208201905061095e5f83018461093c565b92915050565b5f819050919050565b61097681610964565b82525050565b5f60208201905061098f5f83018461096d565b92915050565b5f82825260208201905092915050565b7f526563697069656e74206d7573742062652061207665726966696564207573655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f6109ff602183610995565b9150610a0a826109a5565b604082019050919050565b5f6020820190508181035f830152610a2c816109f3565b9050919050565b7f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f610a8d602983610995565b9150610a9882610a33565b604082019050919050565b5f6020820190508181035f830152610aba81610a81565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610af882610964565b9150610b0383610964565b9250828201905080821115610b1b57610b1a610ac1565b5b92915050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f610b55601483610995565b9150610b6082610b21565b602082019050919050565b5f6020820190508181035f830152610b8281610b49565b9050919050565b7f57616c6c657420616c72656164792076657269666965640000000000000000005f82015250565b5f610bbd601783610995565b9150610bc882610b89565b602082019050919050565b5f6020820190508181035f830152610bea81610bb1565b905091905056fea26469706673582212203579f5b90cde80e9422ae9d232029d42e908cdc14f6f4de9011b64bcc893182e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xBAAB9797 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xCC6CB19A EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI PUSH2 0x84 JUMP JUMPDEST DUP1 PUSH3 0x362A95 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x5CEF5334 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x372 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x5EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x509FB5D764CF5E98B9F02A3D86350F8085CEDB516140098D2D6FC2EB6256AC24 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFB44FF3EEBB7F4CCC77E0B5B51902509405960CB2E09B1D24846E951ADB958B7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x5F7 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x600 PUSH0 PUSH2 0x7B8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x731 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x725 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x7B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0x879 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x757 PUSH2 0x602 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B6 JUMPI PUSH2 0x77A PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AD DUP3 PUSH2 0x884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8D8 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x900 DUP5 DUP3 DUP6 ADD PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92B PUSH0 DUP4 ADD DUP5 PUSH2 0x909 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 DUP2 PUSH2 0x931 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95E PUSH0 DUP4 ADD DUP5 PUSH2 0x93C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x976 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98F PUSH0 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526563697069656E74206D757374206265206120766572696669656420757365 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9FF PUSH1 0x21 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0A DUP3 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA2C DUP2 PUSH2 0x9F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA8D PUSH1 0x29 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xA98 DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABA DUP2 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAF8 DUP3 PUSH2 0x964 JUMP JUMPDEST SWAP2 POP PUSH2 0xB03 DUP4 PUSH2 0x964 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0xAC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB55 PUSH1 0x14 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xB60 DUP3 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB82 DUP2 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616C6C657420616C7265616479207665726966696564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBBD PUSH1 0x17 DUP4 PUSH2 0x995 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC8 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBEA DUP2 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH26 0xF5B90CDE80E9422AE9D232029D42E908CDC14F6F4DE9011B64BC 0xC8 SWAP4 XOR 0x2E PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "114:1333:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:328;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1171:271;;;;;;;;;;;;;:::i;:::-;;634:193;;;;;;;;;;;;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;157:42:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;206:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;835:328:2;906:10;:21;917:9;906:21;;;;;;;;;;;;;;;;;;;;;;;;;898:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;996:1;984:9;:13;976:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1080:9;1056;:20;1066:9;1056:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1134:9;1105:50;;1122:10;1105:50;;;1145:9;1105:50;;;;;;:::i;:::-;;;;;;;;835:328;:::o;1171:271::-;1211:14;1228:9;:21;1238:10;1228:21;;;;;;;;;;;;;;;;1211:38;;1277:1;1268:6;:10;1260:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1340:1;1316:9;:21;1326:10;1316:21;;;;;;;;;;;;;;;:25;;;;1360:10;1352:28;;:36;1381:6;1352:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1415:10;1404:30;;;1427:6;1404:30;;;;;;:::i;:::-;;;;;;;;1200:242;1171:271::o;634:193::-;687:10;:22;698:10;687:22;;;;;;;;;;;;;;;;;;;;;;;;;686:23;678:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;773:4;748:10;:22;759:10;748:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;808:10;793:26;;;;;;;;;;;;634:193::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;157:42:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;514:112::-;578:4;602:10;:16;613:4;602:16;;;;;;;;;;;;;;;;;;;;;;;;;595:23;;514:112;;;:::o;206:44::-;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:90::-;1562:7;1605:5;1598:13;1591:21;1580:32;;1528:90;;;:::o;1624:109::-;1705:21;1720:5;1705:21;:::i;:::-;1700:3;1693:34;1624:109;;:::o;1739:210::-;1826:4;1864:2;1853:9;1849:18;1841:26;;1877:65;1939:1;1928:9;1924:17;1915:6;1877:65;:::i;:::-;1739:210;;;;:::o;1955:77::-;1992:7;2021:5;2010:16;;1955:77;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:169::-;2474:11;2508:6;2503:3;2496:19;2548:4;2543:3;2539:14;2524:29;;2390:169;;;;:::o;2565:220::-;2705:34;2701:1;2693:6;2689:14;2682:58;2774:3;2769:2;2761:6;2757:15;2750:28;2565:220;:::o;2791:366::-;2933:3;2954:67;3018:2;3013:3;2954:67;:::i;:::-;2947:74;;3030:93;3119:3;3030:93;:::i;:::-;3148:2;3143:3;3139:12;3132:19;;2791:366;;;:::o;3163:419::-;3329:4;3367:2;3356:9;3352:18;3344:26;;3416:9;3410:4;3406:20;3402:1;3391:9;3387:17;3380:47;3444:131;3570:4;3444:131;:::i;:::-;3436:139;;3163:419;;;:::o;3588:228::-;3728:34;3724:1;3716:6;3712:14;3705:58;3797:11;3792:2;3784:6;3780:15;3773:36;3588:228;:::o;3822:366::-;3964:3;3985:67;4049:2;4044:3;3985:67;:::i;:::-;3978:74;;4061:93;4150:3;4061:93;:::i;:::-;4179:2;4174:3;4170:12;4163:19;;3822:366;;;:::o;4194:419::-;4360:4;4398:2;4387:9;4383:18;4375:26;;4447:9;4441:4;4437:20;4433:1;4422:9;4418:17;4411:47;4475:131;4601:4;4475:131;:::i;:::-;4467:139;;4194:419;;;:::o;4619:180::-;4667:77;4664:1;4657:88;4764:4;4761:1;4754:15;4788:4;4785:1;4778:15;4805:191;4845:3;4864:20;4882:1;4864:20;:::i;:::-;4859:25;;4898:20;4916:1;4898:20;:::i;:::-;4893:25;;4941:1;4938;4934:9;4927:16;;4962:3;4959:1;4956:10;4953:36;;;4969:18;;:::i;:::-;4953:36;4805:191;;;;:::o;5002:170::-;5142:22;5138:1;5130:6;5126:14;5119:46;5002:170;:::o;5178:366::-;5320:3;5341:67;5405:2;5400:3;5341:67;:::i;:::-;5334:74;;5417:93;5506:3;5417:93;:::i;:::-;5535:2;5530:3;5526:12;5519:19;;5178:366;;;:::o;5550:419::-;5716:4;5754:2;5743:9;5739:18;5731:26;;5803:9;5797:4;5793:20;5789:1;5778:9;5774:17;5767:47;5831:131;5957:4;5831:131;:::i;:::-;5823:139;;5550:419;;;:::o;5975:173::-;6115:25;6111:1;6103:6;6099:14;6092:49;5975:173;:::o;6154:366::-;6296:3;6317:67;6381:2;6376:3;6317:67;:::i;:::-;6310:74;;6393:93;6482:3;6393:93;:::i;:::-;6511:2;6506:3;6502:12;6495:19;;6154:366;;;:::o;6526:419::-;6692:4;6730:2;6719:9;6715:18;6707:26;;6779:9;6773:4;6769:20;6765:1;6754:9;6750:17;6743:47;6807:131;6933:4;6807:131;:::i;:::-;6799:139;;6526:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "622200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"checkVerification(address)": "2914",
								"donate(address)": "infinite",
								"donations(address)": "2868",
								"isVerified(address)": "2855",
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"verifyWallet()": "27943",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 506,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 470,
									"end": 506,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 470,
									"end": 506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 492,
									"end": 502,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1447,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203579f5b90cde80e9422ae9d232029d42e908cdc14f6f4de9011b64bcc893182e64736f6c634300081a0033",
									".code": [
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "B9209E33"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "BAAB9797"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "CC6CB19A"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "362A95"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "5CEF5334"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1447,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 835,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 835,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1171,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 634,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 157,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 157,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 157,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 157,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 514,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 514,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 514,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 206,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 206,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 206,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 906,
											"end": 916,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 906,
											"end": 927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 898,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 898,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 996,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 984,
											"end": 997,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 976,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 976,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1089,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1075,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1056,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1132,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "509FB5D764CF5E98B9F02A3D86350F8085CEDB516140098D2D6FC2EB6256AC24"
										},
										{
											"begin": 1145,
											"end": 1154,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1105,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1171,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1225,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1248,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1278,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1260,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1404,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1434,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 634,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 697,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 708,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 687,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 687,
											"end": 709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 709,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 678,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 678,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 678,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 773,
											"end": 777,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 769,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 770,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 748,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 777,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 777,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 748,
											"end": 777,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 748,
											"end": 777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 818,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "FB44FF3EEBB7F4CCC77E0B5B51902509405960CB2E09B1D24846E951ADB958B7"
										},
										{
											"begin": 793,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 819,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 634,
											"end": 827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 157,
											"end": 199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 157,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 514,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 578,
											"end": 582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 617,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 602,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 602,
											"end": 618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 595,
											"end": 618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1705,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1877,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2559,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2390,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2565,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2739,
											"name": "PUSH",
											"source": 3,
											"value": "526563697069656E74206D757374206265206120766572696669656420757365"
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2769,
											"end": 2771,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2757,
											"end": 2772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3157,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2791,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3013,
											"end": 3016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2954,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3021,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2954,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3030,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3123,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3030,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3139,
											"end": 3151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3582,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3163,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3410,
											"end": 3414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3570,
											"end": 3574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3444,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3575,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3444,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3582,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3816,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3588,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3762,
											"name": "PUSH",
											"source": 3,
											"value": "446F6E6174696F6E20616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3712,
											"end": 3726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3763,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "7468616E207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 4188,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3822,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3985,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3985,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4150,
											"end": 4153,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4061,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4154,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4061,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 4188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 4188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 4188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 4188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4613,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4194,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4396,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4457,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4601,
											"end": 4605,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4475,
											"end": 4606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4606,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4475,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4467,
											"end": 4606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4467,
											"end": 4606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4619,
											"end": 4799,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4619,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4744,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4745,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4768,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4785,
											"end": 4786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4996,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4805,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4882,
											"end": 4883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4864,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4864,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4898,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 4965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 4966,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4989,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4953,
											"end": 4989,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4969,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4989,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4953,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5002,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F2066756E647320746F207769746864726177000000000000000000000000"
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5119,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5544,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5178,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5400,
											"end": 5403,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5341,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5408,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5341,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5506,
											"end": 5509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5417,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5510,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5417,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5537,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5526,
											"end": 5538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5969,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5550,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5774,
											"end": 5791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5767,
											"end": 5814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5957,
											"end": 5961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5831,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5962,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5831,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 6148,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5975,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6115,
											"end": 6140,
											"name": "PUSH",
											"source": 3,
											"value": "57616C6C657420616C7265616479207665726966696564000000000000000000"
										},
										{
											"begin": 6111,
											"end": 6112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6092,
											"end": 6141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 6148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 6148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6520,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6154,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6296,
											"end": 6299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6381,
											"end": 6383,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 6376,
											"end": 6379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6317,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6384,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6317,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6393,
											"end": 6486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6486,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6393,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6513,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6502,
											"end": 6514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6945,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6526,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6763,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 6767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6743,
											"end": 6790,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6807,
											"end": 6938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6938,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6807,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"donation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkVerification(address)": "baab9797",
							"donate(address)": "00362a95",
							"donations(address)": "cc6cb19a",
							"isVerified(address)": "b9209e33",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"verifyWallet()": "5cef5334",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"WalletVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"donation.sol\":\"ProfileDonation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"donation.sol\":{\"keccak256\":\"0x4e178b586eeab9bc9bc9f5656bba2f4a5fe06afabe5a4a1c953e21dc5d34c8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf96f371f190f5bcac6a5fa21f477aff364fc038d5c7a1f9053dd39ad39826d\",\"dweb:/ipfs/Qma9kE78NAwzF9pEZ9qodQiYrcJELDkYKu3ruYnqELC7Uy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "donation.sol:ProfileDonation",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "donation.sol:ProfileDonation",
								"label": "isVerified",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 190,
								"contract": "donation.sol:ProfileDonation",
								"label": "donations",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"donation.sol": {
				"ast": {
					"absolutePath": "donation.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"ProfileDonation": [
							330
						]
					},
					"id": 331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:21:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 331,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"142:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "142:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "142:7:2"
								}
							],
							"canonicalName": "ProfileDonation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 330,
							"linearizedBaseContracts": [
								330,
								147,
								177
							],
							"name": "ProfileDonation",
							"nameLocation": "123:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b9209e33",
									"id": 186,
									"mutability": "mutable",
									"name": "isVerified",
									"nameLocation": "189:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 330,
									"src": "157:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "165:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "157:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 184,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "176:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc6cb19a",
									"id": 190,
									"mutability": "mutable",
									"name": "donations",
									"nameLocation": "241:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 330,
									"src": "206:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 189,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 187,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "214:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "206:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "225:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "fb44ff3eebb7f4ccc77e0b5b51902509405960cb2e09b1d24846e951adb958b7",
									"id": 194,
									"name": "WalletVerified",
									"nameLocation": "265:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "280:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:22:2"
									},
									"src": "259:43:2"
								},
								{
									"anonymous": false,
									"eventSelector": "509fb5d764cf5e98b9f02a3d86350f8085cedb516140098d2d6fc2eb6256ac24",
									"id": 202,
									"name": "DonationReceived",
									"nameLocation": "314:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "347:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "331:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "370:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "354:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "389:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "381:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:66:2"
									},
									"src": "308:89:2"
								},
								{
									"anonymous": false,
									"eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
									"id": 208,
									"name": "Withdrawal",
									"nameLocation": "409:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "436:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "420:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "450:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "442:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:38:2"
									},
									"src": "403:55:2"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "504:2:2",
										"statements": []
									},
									"id": 216,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 211,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "492:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "496:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "492:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 213,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 210,
												"name": "Ownable",
												"nameLocations": [
													"484:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "484:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "484:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:0:2"
									},
									"scope": 330,
									"src": "470:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "584:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 223,
														"name": "isVerified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "602:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 225,
													"indexExpression": {
														"id": 224,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "613:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "602:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 222,
												"id": 226,
												"nodeType": "Return",
												"src": "595:23:2"
											}
										]
									},
									"functionSelector": "baab9797",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkVerification",
									"nameLocation": "523:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "549:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "541:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:14:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "578:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:6:2"
									},
									"scope": 330,
									"src": "514:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "667:160:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "686:23:2",
															"subExpression": {
																"baseExpression": {
																	"id": 232,
																	"name": "isVerified",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "687:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 235,
																"indexExpression": {
																	"expression": {
																		"id": 233,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "698:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "702:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "698:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "687:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57616c6c657420616c7265616479207665726966696564",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "711:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf",
																"typeString": "literal_string \"Wallet already verified\""
															},
															"value": "Wallet already verified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43bb515ce3ecbbbd16772553224451b098ed4a79cbf3ca6f365ebe87d9d67fbf",
																"typeString": "literal_string \"Wallet already verified\""
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "678:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "678:59:2"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 240,
															"name": "isVerified",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "748:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 243,
														"indexExpression": {
															"expression": {
																"id": 241,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "759:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "763:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "759:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "748:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "773:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "748:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "748:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "808:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "812:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "808:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 247,
														"name": "WalletVerified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "793:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "793:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "EmitStatement",
												"src": "788:31:2"
											}
										]
									},
									"functionSelector": "5cef5334",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyWallet",
									"nameLocation": "643:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:2"
									},
									"scope": 330,
									"src": "634:193:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "887:276:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 259,
																"name": "isVerified",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "906:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 261,
															"indexExpression": {
																"id": 260,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "917:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "906:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206d75737420626520612076657269666965642075736572",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "929:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90",
																"typeString": "literal_string \"Recipient must be a verified user\""
															},
															"value": "Recipient must be a verified user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4142da3d291a20a9a2cbfa39c3a2a3ca0dc4615a973ee962519d83b50cbd4e90",
																"typeString": "literal_string \"Recipient must be a verified user\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "898:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 266,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "984:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "988:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "984:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "996:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "984:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "999:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b",
																"typeString": "literal_string \"Donation amount must be greater than zero\""
															},
															"value": "Donation amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a9fb27638aa93aeb9aec5f05c33ef7de5a1415a18afe738fff072fdd73d5f1b",
																"typeString": "literal_string \"Donation amount must be greater than zero\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "976:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "976:67:2"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 273,
															"name": "donations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1056:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 275,
														"indexExpression": {
															"id": 274,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1066:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1056:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 276,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1080:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1084:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1080:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1056:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1056:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1122:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1126:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1122:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 283,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1134:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 284,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1145:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1149:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1145:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 280,
														"name": "DonationReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "1105:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "EmitStatement",
												"src": "1100:55:2"
											}
										]
									},
									"functionSelector": "00362a95",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "844:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "859:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "851:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:19:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:2"
									},
									"scope": 330,
									"src": "835:328:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1200:242:2",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1219:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "1211:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1211:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"baseExpression": {
														"id": 294,
														"name": "donations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1228:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 297,
													"indexExpression": {
														"expression": {
															"id": 295,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1238:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1242:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1238:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1228:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1211:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "1268:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1277:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1268:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f207769746864726177",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1280:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															},
															"value": "No funds to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1260:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1260:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1260:43:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "donations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1316:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1326:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1330:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1326:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1316:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1340:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1316:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "1316:25:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1381:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 315,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1360:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1364:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1360:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1352:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1352:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1352:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1372:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1352:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1352:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1415:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1419:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1427:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 322,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1404:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1404:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "1399:35:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1180:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:0:2"
									},
									"scope": 330,
									"src": "1171:271:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 331,
							"src": "114:1333:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								194,
								202,
								208
							]
						}
					],
					"src": "33:1414:2"
				},
				"id": 2
			}
		}
	}
}